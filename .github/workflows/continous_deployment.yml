name: Build and Copy Artifact

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            rust-target:
              [
                x86_64-unknown-linux-gnu,
                i686-unknown-linux-gnu,
                aarch64-unknown-linux-gnu,
                armv7-unknown-linux-gnueabihf,
                s390x-unknown-linux-gnu,
                powerpc64le-unknown-linux-gnu,
              ]
          - os: windows-latest
            rust-target: [x86_64-pc-windows-msvc, i686-pc-windows-msvc]
          - os: macos-latest
            rust-target: [x86_64-apple-darwin, aarch64-apple-darwin]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.rust-target }}
          override: true
      - name: Build and Copy Artifact
        run: |
          for target in ${{ toJson(matrix.rust-target) }}; do
            echo "Building for $target"
            rustup target add $target
            cargo build --target $target --message-format=json-render-diagnostics
            cargo-cp-artifact -nc index.node -- cargo build --target $target --message-format=json-render-diagnostics
          done
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-artifacts
          path: |
            target/**/*.node
